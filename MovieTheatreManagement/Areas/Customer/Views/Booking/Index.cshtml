@model BookingVM
@inject IHttpContextAccessor HttpContextAccessor

@{
	ViewData["Title"] = "Select Seats";
}

<div class="container my-5">
	<div class="row mb-4">
		<div class="col-12">
			<nav aria-label="breadcrumb">
				<ol class="breadcrumb">
					<li class="breadcrumb-item"><a asp-area="Customer" asp-controller="Home" asp-action="Index">Home</a></li>
					<li class="breadcrumb-item"><a asp-area="Customer" asp-controller="Home" asp-action="Details" asp-route-id="@Model.Movie.MovieId">@Model.Movie.Title</a></li>
					<li class="breadcrumb-item active" aria-current="page">Select Seats</li>
				</ol>
			</nav>
		</div>
	</div>

	<div class="row">
		<!-- Movie & Showtime Info -->
		<div class="col-md-4 mb-4">
			<div class="card shadow">
				<div class="card-body">
					<h4 class="card-title">@Model.Movie.Title</h4>
					<hr>
					<div class="d-flex justify-content-between mb-2">
						<span class="text-muted">Room:</span>
						<span class="fw-bold">@Model.Room.Name</span>
					</div>
					<div class="d-flex justify-content-between mb-2">
						<span class="text-muted">Date:</span>
						<span class="fw-bold">@Model.Showtime.StartTime.ToString("dddd, MMMM d, yyyy")</span>
					</div>
					<div class="d-flex justify-content-between mb-2">
						<span class="text-muted">Time:</span>
						<span class="fw-bold">@Model.Showtime.StartTime.ToString("h:mm tt")</span>
					</div>
					<div class="d-flex justify-content-between mb-2">
						<span class="text-muted">Duration:</span>
						<span class="fw-bold">@Model.Movie.Duration minutes</span>
					</div>
				</div>
			</div>

			<!-- Seat Types Legend -->
			<div class="card shadow mt-4">
				<div class="card-header bg-light">
					<h5 class="mb-0">Seat Types</h5>
				</div>
				<div class="card-body">
					<div class="seat-type-legend">
						@foreach (var seatType in Model.SeatTypes)
						{
							<div class="mb-2 d-flex align-items-center">
								<div class="seat-demo @($"seat-{seatType.TypeName.ToLower()}") me-2"></div>
								<span>@($"{seatType.TypeName} - {seatType.Price?.ToString("C")}")</span>
							</div>
						}
						<!-- Booked seats -->
						<div class="mb-2 d-flex align-items-center">
							<div class="seat-demo seat-booked me-2"></div>
							<span>Booked Seat</span>
						</div>
						<!-- Selected seats -->
						<div class="mb-2 d-flex align-items-center">
							<div class="seat-demo seat-selected me-2"></div>
							<span>Selected Seat</span>
						</div>
					</div>
				</div>
			</div>

			<!-- Selected Seats Summary -->
			<div class="card shadow mt-4">
				<div class="card-header bg-light">
					<h5 class="mb-0">Your Selection</h5>
				</div>
				<div class="card-body">
					<div id="selectedSeatsInfo">
						<p>No seats selected</p>
					</div>
					<div class="d-flex justify-content-between mt-3">
						<span class="fw-bold">Total:</span>
						<span class="fw-bold" id="totalPrice">$0.00</span>
					</div>
				</div>
			</div>
		</div>

		<!-- Seat Selection Area -->
		<div class="col-md-8">
			<div class="card shadow">
				<div class="card-header bg-primary text-white">
					<h4 class="mb-0">Select Your Seats</h4>
				</div>
				<div class="card-body">
					<form asp-action="SelectSeats" method="post" id="seatSelectionForm">
						<input type="hidden" name="showtimeId" value="@Model.Showtime.ShowtimeId" />

						<!-- Screen Area -->
						<div class="screen-container text-center mb-5">
							<div class="screen mx-auto mb-2">SCREEN</div>
							<p class="text-muted small">All eyes this way please</p>
						</div>

						<!-- Seat Map -->
						<div class="seat-map-container">
							@foreach (var rowGroup in Model.SeatsByRow)
							{
								<div class="seat-row mb-2">
									<div class="seat-row-label">@rowGroup.Key</div>
									<div class="seat-row-seats">
										@foreach (var seat in rowGroup.OrderBy(s => s.SeatColumn))
										{
											string seatTypeClass = "";
											bool isDisabled = false;
											bool isSelected = false;
											string seatPrice = "0";

											@if (Model.IsSeatBooked(seat.SeatId))
											{
												seatTypeClass = "seat-booked";
												isDisabled = true;
											}

											else if (seat.Type.TypeName == SD.SeatType_Standard) // Standard
											{
												seatTypeClass = $"seat-{SD.SeatType_Standard.ToLower()}";
												seatPrice = Model.SeatTypes.FirstOrDefault(st => st.TypeName == SD.SeatType_Standard).Price?.ToString();
											}
											else if (seat.Type.TypeName == SD.SeatType_Premium) // Premium
											{
												seatTypeClass = $"seat-{SD.SeatType_Premium.ToLower()}";
												seatPrice = Model.SeatTypes.FirstOrDefault(st => st.TypeName == SD.SeatType_Premium).Price?.ToString();
											}
											else if (seat.Type.TypeName == SD.SeatType_VIP) // VIP
											{
												seatTypeClass = $"seat-{SD.SeatType_VIP.ToLower()}";
												seatPrice = Model.SeatTypes.FirstOrDefault(st => st.TypeName == SD.SeatType_VIP).Price?.ToString();
											}

											<div class="seat-container">
												<input type="checkbox"
													   id="seat-@seat.SeatId"
													   name="selectedSeatIds"
													   value="@seat.SeatId"
													   data-seat-price="@seatPrice"
													   data-seat-row="@seat.SeatRow"
													   data-seat-col="@(seat.SeatColumn + 1)"
													   class="seat-checkbox"
												@(isDisabled ? "disabled" : "")>
												<label for="seat-@seat.SeatId"
													   class="seat @seatTypeClass"
													   data-bs-toggle="tooltip"
													   data-bs-placement="top"
													   title="@seat.SeatRow@(seat.SeatColumn + 1)">
													<span class="seat-number">@(seat.SeatColumn + 1) </span>
												</label>
											</div>
										}
									</div>
								</div>
							}
						</div>

						<!-- Continue Button -->
						<div class="mt-4 text-center">
							<button type="submit" class="btn btn-primary btn-lg w-50" id="continueBtn" disabled>
								Continue <i class="bi bi-arrow-right"></i>
							</button>
						</div>
					</form>
				</div>
			</div>
		</div>
	</div>
</div>

<link rel="stylesheet" href="~/css/booking-site.css" />

@section Scripts {
	<script>
		$(document).ready(function() {
			// Initialize tooltips
			var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
			var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
				return new bootstrap.Tooltip(tooltipTriggerEl);
			});

			// Handle seat selection
			$('.seat-checkbox').change(function() {
				updateSelectedSeats();
			});

			// Update selected seats and total price
			function updateSelectedSeats() {
				const selectedSeats = $('.seat-checkbox:checked');
				const continueBtn = $('#continueBtn');
				let totalPrice = 0;
				let seatsList = [];

				selectedSeats.each(function() {
					const seatPrice = parseFloat($(this).data('seat-price'));
					const seatRow = $(this).data('seat-row');
					const seatCol = $(this).data('seat-col');

					totalPrice += seatPrice;
					seatsList.push(`${seatRow}${seatCol}`);
				});

				// Update the selection info
				if (selectedSeats.length > 0) {
					$('#selectedSeatsInfo').html(`
						<div class="mb-2">
							<strong>Seats:</strong> ${seatsList.join(', ')}
						</div>
						<div class="mb-2">
							<strong>Quantity:</strong> ${selectedSeats.length}
						</div>
					`);

					continueBtn.prop('disabled', false);
				} else {
					$('#selectedSeatsInfo').html('<p>No seats selected</p>');
					continueBtn.prop('disabled', true);
				}

				// Update total price
				$('#totalPrice').text(`$${totalPrice.toFixed(2)}`);
			}
		});
	</script>
}