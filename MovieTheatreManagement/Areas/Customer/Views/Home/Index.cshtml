@model List<Movie>
@{
	ViewData["Title"] = "Home";
}

<!-- Simple Header Banner -->
<div class="container-fluid bg-dark text-white py-4 mb-4">
	<div class="container text-center">
		<h1 class="display-5 fw-bold">Movie Theatre</h1>
		<p class="lead">Discover and enjoy the best cinema experience</p>
	</div>
</div>

<!-- Movie Categories Navigation -->
<div class="container mb-5">
	<div class="row">
		<div class="col-12">
			<div class="nav-categories bg-light rounded p-3 mb-4">
				<ul class="nav nav-pills nav-fill">
					<li class="nav-item">
						<a class="nav-link active" href="#now-showing">Now Showing</a>
					</li>
					<li class="nav-item">
						<a class="nav-link" href="#coming-soon">Coming Soon</a>
					</li>
				</ul>
			</div>
		</div>
	</div>
</div>

<!-- Now Showing Section -->
<section id="now-showing" class="pb-5">
	<div class="container">
		<div class="row mb-4">
			<div class="col-12">
				<h2 class="fw-bold border-start border-4 border-primary ps-3">Now Showing</h2>
			</div>
		</div>

		<div class="row g-4">
			@{
				var nowShowingMovies = Model.Where(m => m.StatusId == 1).Take(4).ToList();
				foreach (var movie in nowShowingMovies)
				{
					<div class="col-lg-3 col-md-6">
						<div class="card movie-card h-100 border-0 shadow-sm rounded-3 overflow-hidden">
							<div class="position-relative">
								<img src="@(string.IsNullOrEmpty(movie.ImageUrl) ? "/api/placeholder/400/600" : movie.ImageUrl)"
									 class="card-img-top"
									 alt="@movie.Title"
									 style="height: 450px; object-fit: cover;" />
								<div class="movie-overlay position-absolute top-0 start-0 w-100 h-100 d-flex align-items-end p-3"
									 style="background: linear-gradient(to top, rgba(0,0,0,0.8) 0%, rgba(0,0,0,0) 50%);">
									<div class="w-100">
										<div class="d-flex justify-content-between align-items-center mb-2">
											<span class="badge bg-primary">@movie.Duration min</span>
											@if (movie.MovieGenres != null && movie.MovieGenres.Any())
											{
												<span class="badge bg-secondary">@movie.MovieGenres.First().Genre.GenreName</span>
											}
										</div>
									</div>
								</div>
							</div>
							<div class="card-body">
								<h5 class="card-title fw-bold text-truncate">@movie.Title</h5>
								<p class="card-text text-muted small mb-0">
									Director: @(movie.Director != null ? movie.Director.DirectorName : "N/A")
								</p>
								<p class="card-text small mb-3">
									<span class="text-muted">Genres: </span>
									<span>
										@(movie.MovieGenres != null && movie.MovieGenres.Any()
																			? string.Join(", ", movie.MovieGenres.Select(g => g.Genre.GenreName))
																			: "N/A")
									</span>
								</p>
								<div class="d-grid gap-2">
									<a href="#" class="btn btn-outline-primary btn-sm">View Details</a>
									<a href="#" class="btn btn-primary btn-sm">Book Now</a>
								</div>
							</div>
						</div>
					</div>
				}
			}
		</div>
	</div>
</section>

<!-- Coming Soon Section -->
<section id="coming-soon" class="py-5 bg-light">
	<div class="container">
		<div class="row mb-4">
			<div class="col-12">
				<h2 class="fw-bold border-start border-4 border-primary ps-3">Coming Soon</h2>
			</div>
		</div>

		<div class="row g-4">
			@{
				var comingSoonMovies = Model.Where(m => m.StatusId == 2).Take(4).ToList();
				if (comingSoonMovies.Any())
				{
					foreach (var movie in comingSoonMovies)
					{
						<div class="col-lg-3 col-md-6">
							<div class="card movie-card h-100 border-0 shadow-sm rounded-3 overflow-hidden">
								<div class="position-relative">
									<img src="@(string.IsNullOrEmpty(movie.ImageUrl) ? "/api/placeholder/400/600" : movie.ImageUrl)"
										 class="card-img-top"
										 alt="@movie.Title"
										 style="height: 450px; object-fit: cover;" />
									<div class="movie-overlay position-absolute top-0 start-0 w-100 h-100 d-flex align-items-end p-3"
										 style="background: linear-gradient(to top, rgba(0,0,0,0.8) 0%, rgba(0,0,0,0) 50%);">
										<div class="w-100">
											<div class="d-flex justify-content-between align-items-center mb-2">
												<span class="badge bg-primary">@movie.Duration min</span>
												@if (movie.MovieGenres != null && movie.MovieGenres.Any())
												{
													<span class="badge bg-secondary">@movie.MovieGenres.First().Genre.GenreName</span>
												}
											</div>
										</div>
									</div>
								</div>
								<div class="card-body">
									<h5 class="card-title fw-bold text-truncate">@movie.Title</h5>
									<p class="card-text text-muted small mb-0">
										Director: @(movie.Director != null ? movie.Director.DirectorName : "N/A")
									</p>
									<p class="card-text small mb-2">
										<span class="text-muted">Release Date: </span>
										<span>@(movie.ReleaseDate.HasValue ? movie.ReleaseDate.Value.ToString("MMM dd, yyyy") : "TBA")</span>
									</p>
									<div class="d-grid">
										<a href="#" class="btn btn-outline-primary btn-sm">View Details</a>
									</div>
								</div>
							</div>
						</div>
					}
				}
				else
				{
					<div class="col-12 text-center py-5">
						<p class="text-muted">Stay tuned for upcoming releases!</p>
					</div>
				}
			}

		</div>
	</div>
</section>

<!-- Movies by Genre -->
<section class="py-5">
	<div class="container">
		<div class="row mb-4">
			<div class="col-12">
				<h2 class="fw-bold border-start border-4 border-primary ps-3">Movies by Genre</h2>
			</div>
		</div>

		<!-- Genre Tabs -->
		<ul class="nav nav-tabs mb-4" id="genreTabs" role="tablist">
			<li class="nav-item" role="presentation">
				<button class="nav-link active" id="all-tab" data-bs-toggle="tab" data-bs-target="#all-pane" type="button" role="tab" aria-controls="all-pane" aria-selected="true">All</button>
			</li>
			<li class="nav-item" role="presentation">
				<button class="nav-link" id="action-tab" data-bs-toggle="tab" data-bs-target="#action-pane" type="button" role="tab" aria-controls="action-pane" aria-selected="false">Action</button>
			</li>
			<li class="nav-item" role="presentation">
				<button class="nav-link" id="comedy-tab" data-bs-toggle="tab" data-bs-target="#comedy-pane" type="button" role="tab" aria-controls="comedy-pane" aria-selected="false">Comedy</button>
			</li>
			<li class="nav-item" role="presentation">
				<button class="nav-link" id="drama-tab" data-bs-toggle="tab" data-bs-target="#drama-pane" type="button" role="tab" aria-controls="drama-pane" aria-selected="false">Drama</button>
			</li>
			<li class="nav-item" role="presentation">
				<button class="nav-link" id="horror-tab" data-bs-toggle="tab" data-bs-target="#horror-pane" type="button" role="tab" aria-controls="horror-pane" aria-selected="false">Horror</button>
			</li>
			<li class="nav-item" role="presentation">
				<button class="nav-link" id="scifi-tab" data-bs-toggle="tab" data-bs-target="#scifi-pane" type="button" role="tab" aria-controls="scifi-pane" aria-selected="false">Sci-Fi</button>
			</li>
		</ul>

		<!-- Genre Tab Content -->
		<div class="tab-content" id="genreTabsContent">
			<!-- All Movies -->
			<div class="tab-pane fade show active" id="all-pane" role="tabpanel" aria-labelledby="all-tab" tabindex="0">
				<div class="row g-4">
					@foreach (var movie in Model.Take(8))
					{
						<div class="col-lg-3 col-md-4 col-sm-6">
							<div class="card movie-card h-100 border-0 shadow-sm rounded">
								<img src="@(string.IsNullOrEmpty(movie.ImageUrl) ? "/api/placeholder/400/600" : movie.ImageUrl)"
									 class="card-img-top"
									 alt="@movie.Title"
									 style="height: 450px; object-fit: cover;" />
								<div class="card-body">
									<h5 class="card-title fw-bold">@movie.Title</h5>
									<p class="card-text small mb-2">
										<i class="bi bi-tag"></i>
										@(movie.MovieGenres != null && movie.MovieGenres.Any()
																				? string.Join(", ", movie.MovieGenres.Select(g => g.Genre.GenreName))
																				: "N/A")
									</p>
									<div class="d-grid">
										<a href="#" class="btn btn-outline-secondary btn-sm">Details</a>
									</div>
								</div>
							</div>
						</div>
					}
				</div>
			</div>

			<!-- Action Movies -->
			<div class="tab-pane fade" id="action-pane" role="tabpanel" aria-labelledby="action-tab" tabindex="0">
				<div class="row g-4">
					@{
						var actionMovies = Model.Where(m => m.MovieGenres != null &&
						m.MovieGenres.Any(mg =>
						mg.Genre != null &&
						mg.Genre.GenreName.Equals("Action", StringComparison.OrdinalIgnoreCase))).ToList();

						if (actionMovies.Any())
						{
							foreach (var movie in actionMovies)
							{
								<div class="col-lg-3 col-md-4 col-sm-6">
									<div class="card movie-card h-100 border-0 shadow-sm rounded">
										<img src="@(string.IsNullOrEmpty(movie.ImageUrl) ? "/api/placeholder/300/450" : movie.ImageUrl)"
											 class="card-img-top"
											 alt="@movie.Title"
											 style="height: 350px; object-fit: cover;" />
										<div class="card-body">
											<h5 class="card-title fw-bold">@movie.Title</h5>
											<div class="d-grid">
												<a href="#" class="btn btn-outline-secondary btn-sm">Details</a>
											</div>
										</div>
									</div>
								</div>
							}
						}
						else
						{
							<div class="col-12 text-center py-4">
								<p class="text-muted">No action movies available.</p>
							</div>
						}
					}
				</div>
			</div>

			<!-- Comedy Movies -->
			<div class="tab-pane fade" id="comedy-pane" role="tabpanel" aria-labelledby="comedy-tab" tabindex="0">
				<div class="row g-4">
					@{
						var comedyMovies = Model.Where(m => m.MovieGenres != null &&
						m.MovieGenres.Any(mg =>
						mg.Genre != null &&
						mg.Genre.GenreName.Equals("Comedy", StringComparison.OrdinalIgnoreCase))).ToList();

						if (comedyMovies.Any())
						{
							foreach (var movie in comedyMovies)
							{
								<div class="col-lg-3 col-md-4 col-sm-6">
									<div class="card movie-card h-100 border-0 shadow-sm rounded">
										<img src="@(string.IsNullOrEmpty(movie.ImageUrl) ? "/api/placeholder/300/450" : movie.ImageUrl)"
											 class="card-img-top"
											 alt="@movie.Title"
											 style="height: 350px; object-fit: cover;" />
										<div class="card-body">
											<h5 class="card-title fw-bold">@movie.Title</h5>
											<div class="d-grid">
												<a href="#" class="btn btn-outline-secondary btn-sm">Details</a>
											</div>
										</div>
									</div>
								</div>
							}
						}
						else
						{
							<div class="col-12 text-center py-4">
								<p class="text-muted">No comedy movies available.</p>
							</div>
						}
					}
				</div>
			</div>

			<!-- Drama Movies -->
			<div class="tab-pane fade" id="drama-pane" role="tabpanel" aria-labelledby="drama-tab" tabindex="0">
				<div class="row g-4">
					@{
						var dramaMovies = Model.Where(m => m.MovieGenres != null &&
						m.MovieGenres.Any(mg =>
						mg.Genre != null &&
						mg.Genre.GenreName.Equals("Drama", StringComparison.OrdinalIgnoreCase))).ToList();

						if (dramaMovies.Any())
						{
							foreach (var movie in dramaMovies)
							{
								<div class="col-lg-3 col-md-4 col-sm-6">
									<div class="card movie-card h-100 border-0 shadow-sm rounded">
										<img src="@(string.IsNullOrEmpty(movie.ImageUrl) ? "/api/placeholder/300/450" : movie.ImageUrl)"
											 class="card-img-top"
											 alt="@movie.Title"
											 style="height: 350px; object-fit: cover;" />
										<div class="card-body">
											<h5 class="card-title fw-bold">@movie.Title</h5>
											<div class="d-grid">
												<a href="#" class="btn btn-outline-secondary btn-sm">Details</a>
											</div>
										</div>
									</div>
								</div>
							}
						}
						else
						{
							<div class="col-12 text-center py-4">
								<p class="text-muted">No drama movies available.</p>
							</div>
						}
					}
				</div>
			</div>

			<!-- Horror Movies -->
			<div class="tab-pane fade" id="horror-pane" role="tabpanel" aria-labelledby="horror-tab" tabindex="0">
				<div class="row g-4">
					@{
						var horrorMovies = Model.Where(m => m.MovieGenres != null &&
						m.MovieGenres.Any(mg =>
						mg.Genre != null &&
						mg.Genre.GenreName.Equals("Horror", StringComparison.OrdinalIgnoreCase))).ToList();

						if (horrorMovies.Any())
						{
							foreach (var movie in horrorMovies)
							{
								<div class="col-lg-3 col-md-4 col-sm-6">
									<div class="card movie-card h-100 border-0 shadow-sm rounded">
										<img src="@(string.IsNullOrEmpty(movie.ImageUrl) ? "/api/placeholder/300/450" : movie.ImageUrl)"
											 class="card-img-top"
											 alt="@movie.Title"
											 style="height: 350px; object-fit: cover;" />
										<div class="card-body">
											<h5 class="card-title fw-bold">@movie.Title</h5>
											<div class="d-grid">
												<a href="#" class="btn btn-outline-secondary btn-sm">Details</a>
											</div>
										</div>
									</div>
								</div>
							}
						}
						else
						{
							<div class="col-12 text-center py-4">
								<p class="text-muted">No horror movies available.</p>
							</div>
						}
					}
				</div>
			</div>

			<!-- Sci-Fi Movies -->
			<div class="tab-pane fade" id="scifi-pane" role="tabpanel" aria-labelledby="scifi-tab" tabindex="0">
				<div class="row g-4">
					@{
						var scifiMovies = Model.Where(m => m.MovieGenres != null &&
						m.MovieGenres.Any(mg =>
						mg.Genre != null &&
						mg.Genre.GenreName.Equals("Science Fiction", StringComparison.OrdinalIgnoreCase))).ToList();

						if (scifiMovies.Any())
						{
							foreach (var movie in scifiMovies)
							{
								<div class="col-lg-3 col-md-4 col-sm-6">
									<div class="card movie-card h-100 border-0 shadow-sm rounded">
										<img src="@(string.IsNullOrEmpty(movie.ImageUrl) ? "/api/placeholder/300/450" : movie.ImageUrl)"
											 class="card-img-top"
											 alt="@movie.Title"
											 style="height: 350px; object-fit: cover;" />
										<div class="card-body">
											<h5 class="card-title fw-bold">@movie.Title</h5>
											<div class="d-grid">
												<a href="#" class="btn btn-outline-secondary btn-sm">Details</a>
											</div>
										</div>
									</div>
								</div>
							}
						}
						else
						{
							<div class="col-12 text-center py-4">
								<p class="text-muted">No science fiction movies available.</p>
							</div>
						}
					}
				</div>
			</div>
		</div>
	</div>
</section>